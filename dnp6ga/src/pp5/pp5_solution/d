_Squash.Grow:
	BeginFunc 16 ;
	_tmp0 = "But I don't like squash\n" ;
	PushParam _tmp0 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp1 = 10 ;
	_tmp2 = 5 ;
	_tmp3 = _tmp1 * _tmp2 ;
	PushParam _tmp3 ;
	LCall _PrintInt ;
	PopParams 4 ;
	EndFunc ;
VTable Squash =
	_Vegetable.Eat,
	_Squash.Grow,
; 
_Vegetable.Eat:
	BeginFunc 40 ;
	_tmp4 = 5 ;
	_tmp5 = 2 ;
	_tmp6 = _tmp4 % _tmp5 ;
	*(this + 4) = _tmp6 ;
	_tmp7 = "Yum! " ;
	PushParam _tmp7 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp8 = *(this + 4) ;
	PushParam _tmp8 ;
	LCall _PrintInt ;
	PopParams 4 ;
	_tmp9 = "\n" ;
	PushParam _tmp9 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp10 = *(veg) ;
	_tmp11 = *(_tmp10 + 4) ;
	PushParam w ;
	PushParam s ;
	PushParam veg ;
	ACall _tmp11 ;
	PopParams 12 ;
	Return  ;
	EndFunc ;
_Vegetable.Grow:
	BeginFunc 12 ;
	_tmp12 = "Grow, little vegetables, grow!\n" ;
	PushParam _tmp12 ;
	LCall _PrintString ;
	PopParams 4 ;
	_tmp13 = *(this) ;
	_tmp14 = *(_tmp13) ;
	PushParam this ;
	PushParam this ;
	ACall _tmp14 ;
	PopParams 8 ;
	EndFunc ;
VTable Vegetable =
	_Vegetable.Eat,
	_Vegetable.Grow,
; 
VTable Seeds =
; 
main:
	BeginFunc 264 ;
	_tmp15 = 2 ;
	_tmp16 = 0 ;
	_tmp17 = _tmp15 < _tmp16 ;
	IfZ _tmp17 Goto _L0 ;
	_tmp18 = "Decaf runtime error: Array size is <= 0\n" ;
	PushParam _tmp18 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L0:
	_tmp19 = 1 ;
	_tmp20 = _tmp19 + _tmp15 ;
	_tmp21 = 4 ;
	_tmp22 = _tmp20 * _tmp21 ;
	PushParam _tmp22 ;
	_tmp23 = LCall _Alloc ;
	PopParams 4 ;
	*(_tmp23) = _tmp15 ;
	_tmp24 = _tmp23 + _tmp21 ;
	veggies = _tmp24 ;
	_tmp25 = 0 ;
	_tmp26 = 0 ;
	_tmp27 = _tmp25 < _tmp26 ;
	_tmp28 = *(veggies + -4) ;
	_tmp29 = _tmp25 < _tmp28 ;
	_tmp30 = _tmp29 == _tmp26 ;
	_tmp31 = _tmp27 || _tmp30 ;
	IfZ _tmp31 Goto _L1 ;
	_tmp32 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp32 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L1:
	_tmp33 = 4 ;
	_tmp34 = _tmp33 * _tmp25 ;
	_tmp35 = veggies + _tmp34 ;
	_tmp36 = 12 ;
	PushParam _tmp36 ;
	_tmp37 = LCall _Alloc ;
	PopParams 4 ;
	_tmp38 = Squash ;
	*(_tmp37) = _tmp38 ;
	*(_tmp35) = _tmp37 ;
	_tmp39 = 1 ;
	_tmp40 = 0 ;
	_tmp41 = _tmp39 < _tmp40 ;
	_tmp42 = *(veggies + -4) ;
	_tmp43 = _tmp39 < _tmp42 ;
	_tmp44 = _tmp43 == _tmp40 ;
	_tmp45 = _tmp41 || _tmp44 ;
	IfZ _tmp45 Goto _L2 ;
	_tmp46 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp46 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L2:
	_tmp47 = 4 ;
	_tmp48 = _tmp47 * _tmp39 ;
	_tmp49 = veggies + _tmp48 ;
	_tmp50 = 12 ;
	PushParam _tmp50 ;
	_tmp51 = LCall _Alloc ;
	PopParams 4 ;
	_tmp52 = Vegetable ;
	*(_tmp51) = _tmp52 ;
	*(_tmp49) = _tmp51 ;
	_tmp53 = 0 ;
	_tmp54 = 0 ;
	_tmp55 = _tmp53 < _tmp54 ;
	_tmp56 = *(veggies + -4) ;
	_tmp57 = _tmp53 < _tmp56 ;
	_tmp58 = _tmp57 == _tmp54 ;
	_tmp59 = _tmp55 || _tmp58 ;
	IfZ _tmp59 Goto _L3 ;
	_tmp60 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp60 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L3:
	_tmp61 = 4 ;
	_tmp62 = _tmp61 * _tmp53 ;
	_tmp63 = veggies + _tmp62 ;
	_tmp64 = *(_tmp63) ;
	_tmp65 = 1 ;
	_tmp66 = 0 ;
	_tmp67 = _tmp65 < _tmp66 ;
	_tmp68 = *(veggies + -4) ;
	_tmp69 = _tmp65 < _tmp68 ;
	_tmp70 = _tmp69 == _tmp66 ;
	_tmp71 = _tmp67 || _tmp70 ;
	IfZ _tmp71 Goto _L4 ;
	_tmp72 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp72 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L4:
	_tmp73 = 4 ;
	_tmp74 = _tmp73 * _tmp65 ;
	_tmp75 = veggies + _tmp74 ;
	_tmp76 = *(_tmp75) ;
	_tmp77 = *(_tmp76) ;
	_tmp78 = *(_tmp77) ;
	PushParam _tmp64 ;
	PushParam _tmp76 ;
	ACall _tmp78 ;
	PopParams 8 ;
	EndFunc ;
